<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qzhgsK15TJEAAAAASUVORK5CYII=
</value>
  </data>
</root>